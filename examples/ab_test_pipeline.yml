# A/B Test Analysis Pipeline
pipeline_name: ab_test_daily_analysis
tags: [daily, ab_test, analytics]

# Global variables for incremental processing
variables:
  start_date: "{{ state.get('last_processed_date', days_ago(7)) }}"
  end_date: "{{ yesterday() }}"

steps:
  # Step 1: Get active experiments
  - id: get_active_experiments
    type: source
    source_type: clickhouse
    config:
      query: |
        SELECT 
          experiment_id,
          experiment_name,
          start_date,
          end_date,
          status
        FROM experiments 
        WHERE status = 'active'
        AND start_date <= '{{ var("end_date") }}'
        AND (end_date IS NULL OR end_date >= '{{ var("start_date") }}')
        ORDER BY experiment_id
  
  # Step 2: Fetch experiment data for date range
  - id: fetch_experiment_data
    type: source
    source_type: clickhouse
    depends_on: [get_active_experiments]
    config:
      query: |
        SELECT 
          experiment_id,
          user_id,
          group_name,
          event_date,
          conversion_event,
          revenue_usd,
          session_duration_seconds
        FROM user_experiment_events 
        WHERE experiment_id IN (
          SELECT experiment_id 
          FROM ({{ steps.get_active_experiments.query }}) as active_experiments
        )
        AND event_date BETWEEN '{{ var("start_date") }}' AND '{{ var("end_date") }}'
        AND group_name IN ('control', 'treatment')
        ORDER BY experiment_id, event_date, user_id
        
  # Step 3: Run A/B test calculations (placeholder for now)
  - id: run_ab_tests
    type: processor
    processor_type: validator  # Using validator as placeholder until we implement AB test processor
    depends_on: [fetch_experiment_data]
    config:
      required_columns: [experiment_id, user_id, group_name, event_date]
      row_count_min: 1
      
  # Step 4: Save results to ClickHouse
  - id: save_results
    type: endpoint
    endpoint_type: clickhouse
    depends_on: [run_ab_tests]
    config:
      table: "ab_test_results"
      auto_create: true
      mode: "append"
      schema:
        experiment_id: "String"
        date: "Date"
        control_users: "UInt32"
        treatment_users: "UInt32"
        control_conversions: "UInt32"
        treatment_conversions: "UInt32"
        control_conversion_rate: "Float64"
        treatment_conversion_rate: "Float64"
        relative_lift: "Float64"
        p_value: "Float64"
        confidence_interval_lower: "Float64"
        confidence_interval_upper: "Float64"
        is_significant: "UInt8"
        created_at: "DateTime"